{"ast":null,"code":"var _jsxFileName = \"/Users/sashakaun/Desktop/Studies/webdev/fullstackopen/part2/forms/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport axios from 'axios';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    noteService.getAll().then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    axios.post(\"http://localhost:3001/notes\", noteObject).then(response => {\n      console.log(response);\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"show \", showAll ? 'important' : 'all')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    key: note.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sashakaun/Desktop/Studies/webdev/fullstackopen/part2/forms/src/App.js"],"names":["React","useState","useEffect","Note","axios","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","getAll","then","response","data","toggleImportanceOf","id","note","find","n","changedNote","important","update","map","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","Math","random","post","concat","handleNoteChange","target","value","notesToShow","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\n\nconst App = () => {\n    const [notes,setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n\n    useEffect(() => {\n        console.log('effect')\n        noteService\n            .getAll()\n            .then(response => {\n                setNotes(response.data)\n            })\n    }, []) \n\n\n    const toggleImportanceOf = (id) => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = {...note, important: !note.important}\n\n        noteService.update(id, changedNote).then(response => {\n            setNotes(notes.map(note => note.id !== id ? note : response.data))\n        })\n    }\n    \n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n        }\n\n        axios.post(\"http://localhost:3001/notes\", noteObject).then(response => {\n            console.log(response)\n            setNotes(notes.concat(response.data))\n            setNewNote('')\n        })\n    }\n    \n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note) =>\n                    <Note note={note} \n                    toggleImportance = {() => toggleImportanceOf(note.id)}\n                    key={note.id}/>  \n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}