{"ast":null,"code":"var _jsxFileName = \"/Users/sashakaun/Desktop/Studies/webdev/fullstackopen/part2/forms/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    }).catch(error => {\n      alert(`the note '${note.content}' was already deleted`);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"show \", showAll ? 'important' : 'all')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    key: note.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sashakaun/Desktop/Studies/webdev/fullstackopen/part2/forms/src/App.js"],"names":["React","useState","useEffect","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","getAll","then","initialNotes","catch","error","alert","note","content","filter","n","id","toggleImportanceOf","find","changedNote","important","update","returnedNote","map","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","create","concat","handleNoteChange","target","value","notesToShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n    const [notes,setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n\n    useEffect(() => {\n        console.log('effect')\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n            .catch(error => {\n                alert(`the note '${note.content}' was already deleted`)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }, []) \n\n\n    const toggleImportanceOf = (id) => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = {...note, important: !note.important}\n\n        noteService.update(id, changedNote).then(returnedNote => {\n            setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n    }\n    \n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n        }\n\n        noteService.create(noteObject).then(returnedNote=>{\n            setNotes(notes.concat(returnedNote))\n            setNewNote('')\n        })\n    }\n    \n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note) =>\n                    <Note note={note} \n                    toggleImportance = {() => toggleImportanceOf(note.id)}\n                    key={note.id}/>  \n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}